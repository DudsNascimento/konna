/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */

val ktor_version: String by project
val kotlin_version: String by project
val logback_version: String by project
val logback_json_version: String by project
val jackson_version: String by project
val koin_version: String by project

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm") version "1.5.10"

    //To publish to AWS codeartifact
    id("maven-publish")

    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:29.0-jre")

    // Use the Kotlin test library.
    testImplementation("org.jetbrains.kotlin:kotlin-test")

    // Use the Kotlin JUnit integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")

    // Ktor dependencies
    implementation("io.ktor:ktor-server-core:$ktor_version")
    implementation("io.ktor:ktor-server-netty:$ktor_version")
    implementation("io.ktor:ktor-gson:$ktor_version")
    implementation("io.insert-koin:koin-ktor:$koin_version")
    implementation("ch.qos.logback:logback-classic:$logback_version")
    implementation("ch.qos.logback.contrib:logback-json-classic:$logback_json_version")
    implementation("ch.qos.logback.contrib:logback-jackson:$logback_json_version")
    implementation("com.fasterxml.jackson.core:jackson-databind:$jackson_version")
    testImplementation("io.ktor:ktor-server-tests:$ktor_version")

    // Koin dependencies
    implementation("io.insert-koin:koin-logger-slf4j:$koin_version")
    testImplementation("io.insert-koin:koin-test-junit4:$koin_version")
}

group = "kotlin.konna"
val artifact = "konna"
version = "0.0.1"
application {
    // Define the main class for the application.
    mainClass.set("com.konna.AppKt")
}

tasks.withType<Jar> {
    manifest {
        attributes["Main-Class"] = application.mainClass
    }
    configurations["compileClasspath"].forEach { file: File ->
        from(zipTree(file.absoluteFile))
    }
}

publishing {
  publications {
    create<MavenPublication>("maven") {
        groupId = "$group"
        artifactId = "$artifact"
        version = "$version"

        from(components["java"])
    }
  }
  repositories {
      maven {
          url = uri("https://tiago-nascimento-473200936731.d.codeartifact.us-east-2.amazonaws.com/maven/konna/")
          credentials {
              username = "aws"
              password = System.getenv("CODEARTIFACT_AUTH_TOKEN")
          }
      }
  }
}
